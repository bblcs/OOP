/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

public class AppTest {

    /**
     * @param arr an array
     * @return whether the arr is sorted
     */
    static boolean isSorted(int arr[]) {
        if (arr.length == 0) {
            return true;
        }

        for (int i = 1; i < arr.length; i++) {
            if (arr[i] < arr[i - 1]) {
                return false;
            }
        }

        return true;
    }

    @Test
    void testEmptyArray() {
        int[] arr = {};
        App.sort(arr);
        assertTrue(isSorted(arr));
    }

    @Test
    void testSingleElementArray() {
        int[] arr = {0};
        App.sort(arr);
        assertTrue(isSorted(arr));
    }

    @Test
    void testAlreadySortedArray() {
        int[] arr = {1, 2, 3};
        App.sort(arr);
        assertTrue(isSorted(arr));
    }

    @Test
    void testReverseSortedArray() {
        int[] arr = {5, 4, 3, 2, 1};
        App.sort(arr);
        assertTrue(isSorted(arr));
    }

    @Test
    void testUnsortedArray() {
        int[] arr = {5, 4, 1, 2, 3};
        App.sort(arr);
        assertTrue(isSorted(arr));
    }

    @Test
    void testArrayWithDuplicates() {
        int[] arr = {3, 2, 4, 2, 3, 1};
        App.sort(arr);
        assertTrue(isSorted(arr));
    }

    @Test
    void testArrayWithNegativeNumbers() {
        int[] arr = {-2, -1, -3, 0, 1};
        App.sort(arr);
        assertTrue(isSorted(arr));
    }
}
